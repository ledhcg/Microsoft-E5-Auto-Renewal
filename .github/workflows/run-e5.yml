name: Run E5 Auto Refresh

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  run-e5:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create configuration files from secrets
      run: |
        # Create .env file from secrets
        cat > .env << EOF
        E5_CLIENT_ID=${{ secrets.E5_CLIENT_ID }}
        E5_CLIENT_SECRET=${{ secrets.E5_CLIENT_SECRET }}
        E5_REFRESH_TOKEN=${{ secrets.E5_REFRESH_TOKEN }}
        E5_WEB_APP_PASSWORD=${{ secrets.E5_WEB_APP_PASSWORD }}
        E5_WEB_APP_HOST=127.0.0.1
        E5_WEB_APP_PORT=9999
        E5_TIME_DELAY=3
        EOF
        
        # Create profiles.json from secret
        echo '${{ secrets.PROFILES_JSON }}' > profiles.json
        
        echo "Configuration files created successfully!"
    
    - name: Create event log file
      run: |
        echo "Event log created at: $(date)" > event-log.txt
    
    - name: Random delay (0-5 minutes)
      run: |
        DELAY=$((RANDOM % 301))
        echo "Waiting for $DELAY seconds ($(($DELAY / 60)) minutes)..."
        sleep $DELAY
    
    - name: Load environment variables and start server
      run: |
        # Export variables from .env file
        export $(cat .env | grep -v '^#' | xargs)
        
        # Start the server in background
        python main.py &
        SERVER_PID=$!
        
        # Wait for server to start
        echo "Waiting for server to start..."
        for i in {1..30}; do
          if curl -s http://localhost:9999 > /dev/null; then
            echo "Server is ready!"
            break
          fi
          echo "Waiting... ($i/30)"
          sleep 2
        done
        
        # Run API calls
        chmod +x api-calls.sh
        ./api-calls.sh
        
        # Kill the server
        kill $SERVER_PID || true